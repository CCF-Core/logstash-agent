# Grok pattern match for MySQL Logst (and NGINX Logs, while I'm testing)
filter {
  grok {
    match => { "message" => '%{WORD:mysql_query_verb} %{DATA:mysql_query_fields} FROM %{NOTSPACE:mysql_table}' }
    match => { "message" => '%{WORD:mysql_query_verb} %{NOTSPACE:mysql_table} SET %{DATA:mysql_query_fields}' }
    match => { "message" => '%{WORD:mysql_query_verb} INTO %{NOTSPACE:mysql_table} \(%{DATA:mysql_query_fields}\)' }
    match => { "message" => '%{WORD:mysql_query_verb} FROM %{NOTSPACE:mysql_table} WHERE %{GREEDYDATA:mysql_delete_criteria}' }
  }
}

filter {
  grok {
    match => { "message" => '%{IPORHOST:clientip} (?:%{WORD:ident}|-) (?:%{WORD:auth}|-) \[%{HTTPDATE:nginx_timestamp}\] "%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion:float}" %{NUMBER:response:int} (?:%{NUMBER:bytes:int}|-) (?:"(?:%{URI:referrer}|-)"|%{QS:referrer}) %{QS:agent} %{QS:xforwardedfor}' }
    match => { "message" => '%{TIMESTAMP_ISO8601}%{SPACE}%{INT:mysql_connection_id} %{WORD:mysql_event_type}%{SPACE}%{GREEDYDATA:mysql_event_details}' }
  }
  if [message] =~ /SHOW.*GLOBAL.*STATUS/ {
    drop {}
  }
}
